
Generation: 0
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=50152.95780869022 Adjusted=1.9938605918489032E-5 Hits=0
Tree 0:
velocity + (sin(sin(thickness) * velocity) + velocity)

Generation: 1
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=47647.70931259402 Adjusted=2.0986927336050426E-5 Hits=0
Tree 0:
velocity + ((angle - thickness) + velocity)

Generation: 2
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=46238.28514857396 Adjusted=2.1626631916709907E-5 Hits=0
Tree 0:
velocity + (((chordLength + angle) - (thickness - velocity)) + angle)

Generation: 3
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=46238.28514857396 Adjusted=2.1626631916709907E-5 Hits=0
Tree 0:
velocity + (((chordLength + angle) - (thickness - velocity)) + angle)

Generation: 4
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=46094.65776866151 Adjusted=2.1694017363168157E-5 Hits=0
Tree 0:
(((angle - thickness) + velocity) + (sin((thickness - sin(velocity)) * velocity) + velocity)) + angle

Generation: 5
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=46234.92935379806 Adjusted=2.162820157345566E-5 Hits=0
Tree 0:
(((chordLength + angle) - (sin(angle) - velocity)) + angle) + velocity

Generation: 6
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=45744.61998627465 Adjusted=2.186001633161899E-5 Hits=0
Tree 0:
((chordLength + ((chordLength + angle) - sin(angle))) - (sin(angle * velocity) - ((sin(angle) - (thickness - velocity)) + angle))) + (sin(sin(((chordLength / chordLength) - sin(velocity)) + ((velocity + velocity) - sin(chordLength + (velocity + chordLength))))) + velocity)

Generation: 7
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=45584.82643432153 Adjusted=2.193664299232932E-5 Hits=0
Tree 0:
((chordLength + ((chordLength + angle) - sin(angle))) - (sin(angle * velocity) - ((sin(angle) - (thickness - velocity)) + angle))) + (sin(sin(((chordLength / chordLength) - sin(velocity)) + ((velocity + velocity) - sin(chordLength + (velocity + chordLength))))) + (velocity + sin((sin((velocity / velocity) - thickness) + velocity) + velocity)))

Generation: 8
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=45510.93781212016 Adjusted=2.1972257127968144E-5 Hits=0
Tree 0:
(((chordLength + sin(velocity)) + (sin(sin(((chordLength / chordLength) - sin(velocity)) + ((velocity + velocity) - sin(chordLength + (velocity + chordLength))))) + (velocity + sin((sin((velocity / velocity) - thickness) + velocity) + velocity)))) - sin(angle)) + (((angle - thickness) + velocity) + angle)

Generation: 9
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=45525.8181040334 Adjusted=2.1965075567435844E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + (sin((thickness - (angle - thickness)) * velocity) + velocity)) + angle) + angle) / velocity)) + velocity) - sin(angle)) + (((angle - thickness) + velocity) + angle)

Generation: 10
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=45251.14294552939 Adjusted=2.2098400979677655E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + sin((sin((velocity / velocity) - thickness) + velocity) + velocity)) + velocity)) + angle) + angle) / velocity)) + velocity) - sin(angle)) + (((angle - thickness) + velocity) + angle)

Generation: 11
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=45002.64293680878 Adjusted=2.2220423386705287E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + (velocity + chordLength)) + velocity)) + angle) + angle) / velocity)) + velocity) - sin(angle)) + (((angle - thickness) + velocity) + angle)

Generation: 12
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=44920.21116695269 Adjusted=2.226119853009824E-5 Hits=1
Tree 0:
(((chordLength + ((((velocity + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity)) + angle) + angle) / velocity)) + velocity) - sin(angle)) + (sin(thickness + sin(((chordLength / chordLength) - sin((thickness - (sin((sin(thickness) * velocity) + velocity) + velocity)) - sin(velocity))) + ((velocity + chordLength) - velocity))) + ((sin(thickness + chordLength) + (((angle + angle) - (thickness - velocity)) + chordLength)) + chordLength))

Generation: 13
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=44772.265799890396 Adjusted=2.2334756737857795E-5 Hits=0
Tree 0:
((chordLength + ((chordLength + angle) - sin(angle))) - (sin((angle + angle) - (thickness - velocity)) - ((sin(sin(((chordLength / chordLength) - sin(velocity)) + ((velocity + velocity) - sin(sin(chordLength + (velocity + chordLength)))))) - (thickness - velocity)) + ((chordLength / chordLength) + angle)))) + (sin(sin(((chordLength / chordLength) - sin(velocity)) + ((velocity + velocity) - sin(chordLength + ((angle + angle) - ((angle + angle) - velocity)))))) + velocity)

Generation: 14
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=44582.55976299194 Adjusted=2.242979262571319E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity)) + angle) + angle) / velocity)) + velocity) - sin(angle)) + (sin(thickness + sin((((velocity + velocity) - sin(chordLength + (velocity + chordLength))) - sin((thickness - (sin((sin(thickness) * velocity) + velocity) + velocity)) - sin(velocity))) + ((velocity + chordLength) - velocity))) + ((sin(thickness + chordLength) + (((angle + angle) - (thickness - velocity)) + chordLength)) + chordLength))

Generation: 15
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=44401.50799726612 Adjusted=2.252125037760413E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity)) + angle) + angle) / velocity)) + velocity) - sin(angle)) + (sin(thickness + sin(((chordLength / chordLength) - sin((thickness - (sin(chordLength + velocity) + velocity)) - sin(velocity))) + ((velocity + chordLength) - velocity))) + ((sin(thickness + sin(((chordLength / chordLength) - sin(velocity)) + ((velocity + velocity) - sin(sin(thickness + chordLength) + velocity)))) + (((angle + angle) - (thickness - velocity)) + chordLength)) + chordLength))

Generation: 16
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=44181.85725877427 Adjusted=2.2633212563486037E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + ((chordLength + angle) - sin(angle))) + velocity)) + angle) + angle) / velocity)) + velocity) - sin(angle)) + (((((((velocity + (((velocity + (sin(thickness) * velocity)) + velocity) + velocity)) + (chordLength + angle)) + angle) / velocity) - thickness) + velocity) + angle)

Generation: 17
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=43491.98058214986 Adjusted=2.2992215907373668E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + ((chordLength + angle) - sin(angle))) + velocity)) + angle) + angle) / velocity)) + velocity) - sin(angle)) + (((((((velocity + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity)) + ((velocity + ((velocity + sin((chordLength + velocity) + velocity)) + velocity)) + angle)) + angle) / velocity) - thickness) + velocity) + angle)

Generation: 18
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=42368.65566002126 Adjusted=2.3601796720372456E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + angle) + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity))) + ((velocity + sin((((chordLength / chordLength) + angle) + velocity) + velocity)) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle) / velocity) + velocity) + angle)

Generation: 19
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=42368.65566002126 Adjusted=2.3601796720372456E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + angle) + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity))) + ((velocity + sin((((chordLength / chordLength) + angle) + velocity) + velocity)) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle) / velocity) + velocity) + angle)

Generation: 20
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=41790.4318800053 Adjusted=2.3928349784024514E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + angle) + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity))) + ((velocity + sin((((chordLength / chordLength) + angle) + velocity) + velocity)) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + angle)

Generation: 21
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=41760.31817333471 Adjusted=2.3945604299399642E-5 Hits=0
Tree 0:
(((chordLength + (((((thickness - velocity) + ((velocity + angle) + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity))) + ((velocity + sin((((chordLength / chordLength) + angle) + velocity) + velocity)) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + angle)

Generation: 22
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=41728.683702850285 Adjusted=2.3963757001390752E-5 Hits=0
Tree 0:
(((chordLength + (((((thickness - velocity) + ((velocity + angle) + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity))) + ((velocity + sin((((chordLength / chordLength) + angle) + velocity) + velocity)) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + angle)) + angle))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + angle)

Generation: 23
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=41467.65554619549 Adjusted=2.4114599010474652E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + angle) + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity))) + ((velocity + sin(velocity + velocity)) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 24
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=41174.604784509596 Adjusted=2.4286224943955248E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + angle) + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity))) + ((velocity + sin(velocity + velocity)) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + (velocity + ((angle + angle) - (thickness - velocity)))) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 25
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=41059.788896506485 Adjusted=2.4354135097610888E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + angle) + (((velocity + (sin(thickness) * velocity)) + velocity) + velocity))) + ((velocity + (((angle + angle) - (thickness - velocity)) + velocity)) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 26
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=40763.43142375516 Adjusted=2.4531189693406534E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + angle) + sin(sin(angle)))) + ((velocity + sin(velocity + velocity)) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + (velocity + ((angle + angle) - (thickness - velocity)))) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + angle)) + angle)) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 27
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=40763.43142375516 Adjusted=2.4531189693406534E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + angle) + sin(sin(angle)))) + ((velocity + sin(velocity + velocity)) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + (velocity + ((angle + angle) - (thickness - velocity)))) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + angle)) + angle)) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 28
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=40342.91793448789 Adjusted=2.4786883654280705E-5 Hits=0
Tree 0:
(((chordLength + ((((velocity + ((velocity + angle) + ((velocity + sin((sin(sin(angle)) + velocity) + velocity)) + velocity))) + ((velocity + sin(sin(angle))) + velocity)) + angle) / velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + (((velocity + ((angle + angle) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle)) + angle)) + angle) / velocity) + velocity) + sin((velocity + sin((((chordLength / chordLength) + angle) + velocity) + velocity)) + velocity))

Generation: 29
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=37195.25063459645 Adjusted=2.6884430095486402E-5 Hits=0
Tree 0:
(((velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + ((angle + (velocity + ((angle + angle) - (thickness - velocity)))) - (thickness - velocity))) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 30
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=34531.28885644933 Adjusted=2.895840481808195E-5 Hits=0
Tree 0:
(((velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)) + velocity) - sin(angle)) + ((((((velocity + velocity) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 31
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=34417.089550549244 Adjusted=2.905448887659257E-5 Hits=0
Tree 0:
(((velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)) + velocity) - sin(angle)) + ((((((velocity + velocity) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + sin(sin(velocity + velocity)))

Generation: 32
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=28470.81512016793 Adjusted=3.5122453408025006E-5 Hits=0
Tree 0:
(((velocity + (sin((thickness + velocity) + velocity) * velocity)) + velocity) - sin(angle)) + ((((velocity + ((angle + angle) - (thickness - velocity))) / velocity) + velocity) + sin(sin(angle)))

Generation: 33
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=28599.029143888583 Adjusted=3.496499933510332E-5 Hits=0
Tree 0:
(((velocity + (sin((thickness + velocity) + velocity) * velocity)) + velocity) - sin(sin(sin(thickness) * velocity) + velocity)) + ((((velocity + ((angle + angle) - (thickness - velocity))) / velocity) + velocity) + sin(sin(angle)))

Generation: 34
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=26866.558835367363 Adjusted=3.7219607710829335E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 35
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=26866.33019291663 Adjusted=3.721992445172846E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + ((((((velocity + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 36
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=26505.327644855017 Adjusted=3.772684067738459E-5 Hits=0
Tree 0:
((velocity + (sin((thickness + velocity) + velocity) * velocity)) + velocity) + ((((((velocity + ((velocity + angle) + (((velocity + ((velocity + ((angle + angle) - (thickness - velocity))) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + (sin(angle) + angle)) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 37
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=26215.844813375155 Adjusted=3.8143415316317006E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + ((((((velocity + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((velocity + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 38
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=26195.974179963156 Adjusted=3.817234742953075E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((velocity + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 39
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=26037.05136292907 Adjusted=3.840533172246988E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + ((((((((velocity + ((velocity + angle) + (velocity + (sin((sin(angle) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle)) + angle) + (((((velocity + (sin((thickness + velocity) + velocity) * velocity)) + velocity) + velocity) + velocity) + angle)) + angle) / velocity) + velocity) + sin(velocity))

Generation: 40
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=25997.76808964427 Adjusted=3.846336090048498E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + ((((((velocity + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 41
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=25958.698090056638 Adjusted=3.852124922758754E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)) + ((((((velocity + ((velocity + (sin(velocity + velocity) * velocity)) + (((velocity + ((velocity + (sin(velocity + velocity) * velocity)) + velocity)) + ((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle)) + angle))) + (((velocity + ((velocity + sin(velocity + velocity)) + velocity)) + angle) + angle)) + angle) / velocity) + velocity) + sin(velocity + velocity))

Generation: 42
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=25446.715128278698 Adjusted=3.9296258817702375E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)) + ((velocity + angle) + (velocity + ((sin(angle) + angle) - (thickness - velocity))))) + ((velocity + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity) + velocity) + sin(velocity + (sin(velocity + velocity) * velocity)))

Generation: 43
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=25446.715128278698 Adjusted=3.9296258817702375E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)) + ((velocity + angle) + (velocity + ((sin(angle) + angle) - (thickness - velocity))))) + ((velocity + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity) + velocity) + sin(velocity + (sin(velocity + velocity) * velocity)))

Generation: 44
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=25472.652678340637 Adjusted=3.9256246939814224E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)) + ((sin(sin(angle)) + velocity) + (velocity + ((sin(angle) + angle) - (thickness - velocity))))) + ((velocity + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity) + velocity) + sin(velocity + (sin(velocity + velocity) * velocity)))

Generation: 45
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=25214.38216511998 Adjusted=3.965833210266721E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)) + ((sin(sin(angle)) + velocity) + ((velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)) + ((velocity + angle) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))))) + ((velocity + ((velocity + angle) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity) + velocity) + sin(velocity + (sin(velocity + velocity) * velocity)))

Generation: 46
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=24269.569305345318 Adjusted=4.120216495209123E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((velocity + angle) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (sin((thickness + velocity) + velocity) * velocity)))) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 47
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=24050.70149954198 Adjusted=4.157710006583289E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin((sin(sin(angle)) + velocity) + velocity) * velocity) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (sin((thickness + velocity) + velocity) * velocity)))) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 48
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=24269.569305345318 Adjusted=4.120216495209123E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + velocity) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((velocity + angle) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (sin((thickness + velocity) + velocity) * velocity)))) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 49
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=23652.399685091677 Adjusted=4.227722075107379E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (velocity + (sin((sin(sin(angle)) + velocity) + velocity) * velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((velocity + angle) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (sin((thickness + velocity) + velocity) * velocity)))) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 50
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=22824.77616974208 Adjusted=4.3810120302748045E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((velocity + angle) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (sin((thickness + velocity) + velocity) * velocity)))) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 51
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=22688.552224803978 Adjusted=4.4073148297162544E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + (velocity + velocity)) + velocity) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + (((velocity + (sin(velocity + velocity) * velocity)) + angle) + (((velocity + (sin(velocity + velocity) * ((thickness + velocity) + velocity))) + velocity) - sin(angle)))) + (velocity + (sin((thickness + velocity) + velocity) * velocity)))) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 52
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=20394.117536507194 Adjusted=4.903134283045946E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + ((velocity + angle) + velocity)) + (((sin(velocity + velocity) + velocity) + velocity) + angle))) + angle) / velocity) + velocity) + sin(velocity + (sin(velocity + velocity) * velocity)))

Generation: 53
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=20262.230157158618 Adjusted=4.9350473357117684E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + (velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((velocity + angle) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (sin((thickness + velocity) + velocity) * velocity)))) + angle) / velocity) + velocity) + sin(sin(angle)))

Generation: 54
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=18226.531585303223 Adjusted=5.486206375888524E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (velocity + angle)))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity))

Generation: 55
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=18226.531585303223 Adjusted=5.486206375888524E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (velocity + angle)))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity))

Generation: 56
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=16947.070077816385 Adjusted=5.900376829978517E-5 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (velocity + angle)))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + (sin(sin(velocity + (sin(velocity) * velocity))) + angle)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity))

Generation: 57
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=16583.34761981675 Adjusted=6.0297819541909104E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (velocity + angle)))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + sin(velocity + (sin(velocity + velocity) * velocity))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / velocity))

Generation: 58
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=13042.641893199845 Adjusted=7.666570488425772E-5 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + (velocity + angle)))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 59
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=12536.0614894597 Adjusted=7.976350764816232E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 60
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=12536.0614894597 Adjusted=7.976350764816232E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 61
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=10614.581452492515 Adjusted=9.420115181398775E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 62
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=10524.531283590437 Adjusted=9.500708069330663E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 63
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=10524.531283590437 Adjusted=9.500708069330663E-5 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 64
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=9817.901481030392 Adjusted=1.0184438676077442E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(velocity) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 65
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=9399.305861966812 Adjusted=1.0637951729272472E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 66
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=9234.59430501712 Adjusted=1.0827673531055414E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * (((velocity + velocity) + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 67
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=9215.16556211292 Adjusted=1.0850499519137736E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(thickness) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * (((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 68
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=9113.807568237973 Adjusted=1.0971158661480275E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 69
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=9003.454255736633 Adjusted=1.1105614750198899E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + (((sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (sin(sin(velocity + sin(sin(velocity + velocity)))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 70
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8917.180512869123 Adjusted=1.1213049551497404E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - thickness) + (((((((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(velocity + (sin(velocity) * velocity)) + velocity) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (sin((sin(sin(angle)) + velocity) + velocity) + (velocity + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle)))) + ((velocity + (((sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (sin(sin(velocity + sin(sin(velocity + velocity)))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 71
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8913.350580172179 Adjusted=1.1217867089771616E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + (sin(velocity) * velocity))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 72
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8761.096841791656 Adjusted=1.1412793285168965E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 73
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8727.943207157019 Adjusted=1.1456140523174465E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 74
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8609.397704239826 Adjusted=1.1613865402611918E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(sin(velocity))))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((sin(velocity + velocity) * velocity) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 75
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8606.799467147826 Adjusted=1.1617371011215571E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((sin(velocity + velocity) + velocity) - (thickness - velocity))) + velocity)))) + ((velocity + angle) + (velocity + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + (sin(velocity) * velocity))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 76
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8527.683542289762 Adjusted=1.1725138997612781E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(thickness - velocity)) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + velocity) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 77
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8457.985437807927 Adjusted=1.1821748687856134E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((((velocity + velocity) - (thickness - velocity)) + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + sin(velocity + ((sin(velocity) * velocity) * velocity)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 78
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8457.985437807927 Adjusted=1.1821748687856134E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((((velocity + velocity) - (thickness - velocity)) + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + sin(velocity + ((sin(velocity) * velocity) * velocity)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 79
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8442.889254210038 Adjusted=1.1842883887912315E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((((velocity + velocity) - (thickness - velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle)))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + sin(velocity + velocity))) * ((velocity + velocity) + velocity))) + velocity)) + sin(velocity + ((sin(velocity) * velocity) * velocity)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 80
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8385.051583741137 Adjusted=1.1924562948537049E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 81
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8385.051583741137 Adjusted=1.1924562948537049E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 82
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8385.051583741137 Adjusted=1.1924562948537049E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 83
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8385.051583741137 Adjusted=1.1924562948537049E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 84
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8352.272687575984 Adjusted=1.1971355867351526E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * velocity)) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 85
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8352.272687575984 Adjusted=1.1971355867351526E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * velocity)) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 86
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8346.653412980022 Adjusted=1.1979414459697972E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + velocity) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + velocity) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + angle))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 87
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8198.60550470509 Adjusted=1.2195708676791596E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 88
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8178.469785475654 Adjusted=1.2225731327667564E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 89
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8178.469785475654 Adjusted=1.2225731327667564E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 90
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8178.469785475654 Adjusted=1.2225731327667564E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 91
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8178.232427396569 Adjusted=1.2226086113538868E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + ((((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(thickness) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 92
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8149.279729887111 Adjusted=1.2269517527514984E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + (velocity + velocity)))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 93
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8149.279729887111 Adjusted=1.2269517527514984E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + (velocity + velocity)))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 94
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8146.853923549346 Adjusted=1.22731704493345E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(((sin(velocity) * velocity) * velocity) + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 95
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8134.593067931806 Adjusted=1.229166689693116E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 96
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8134.593067931806 Adjusted=1.229166689693116E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 97
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8134.593067931806 Adjusted=1.229166689693116E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 98
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8124.4520636568395 Adjusted=1.2307007562973086E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + (((sin(velocity) * velocity) + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 99
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8128.178144969939 Adjusted=1.2301366536280993E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + (sin(velocity) * velocity)) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 100
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8118.851556547617 Adjusted=1.2315496078171877E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * (sin(velocity) * velocity)))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 101
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8110.382109272215 Adjusted=1.232835522391293E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(sin(sin(velocity)) * ((velocity + velocity) + velocity))) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 102
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8123.941759349229 Adjusted=1.2307780530848944E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + (sin(velocity) * velocity)) * sin(sin(velocity) * velocity)) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 103
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8119.821066734101 Adjusted=1.2314025783628842E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + (sin(velocity) * velocity)) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + (velocity + (sin(velocity + velocity) * velocity)))) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 104
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8110.1235502358395 Adjusted=1.2328748216033819E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 105
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8110.1235502358395 Adjusted=1.2328748216033819E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 106
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8110.1235502358395 Adjusted=1.2328748216033819E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 107
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8108.591200766893 Adjusted=1.2331077797182103E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + (velocity + velocity)))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + (velocity + velocity))))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 108
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8108.591200766893 Adjusted=1.2331077797182103E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - (thickness - velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + (velocity + velocity)))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + (velocity + velocity))))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 109
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8101.0515358182665 Adjusted=1.2342552939574768E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 110
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8101.0515358182665 Adjusted=1.2342552939574768E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 111
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8101.0515358182665 Adjusted=1.2342552939574768E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 112
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8101.0515358182665 Adjusted=1.2342552939574768E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 113
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8093.73334721842 Adjusted=1.235371144552437E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 114
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8090.178573045615 Adjusted=1.2359138918665444E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 115
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8090.178573045615 Adjusted=1.2359138918665444E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 116
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8088.191397392308 Adjusted=1.2362175041653328E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * (((velocity + (sin(velocity) * velocity)) + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / velocity) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 117
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8071.346223473041 Adjusted=1.238797212503307E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 118
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8071.346223473041 Adjusted=1.238797212503307E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 119
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8071.346223473041 Adjusted=1.238797212503307E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 120
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8071.334095048884 Adjusted=1.238799073756553E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 121
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8071.334095048884 Adjusted=1.238799073756553E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 122
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8069.20303703121 Adjusted=1.2391261972113536E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 123
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8060.560675438927 Adjusted=1.240454597143565E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 124
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8058.407776599894 Adjusted=1.240785958123936E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(sin(velocity + velocity)) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 125
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8058.407776599894 Adjusted=1.240785958123936E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(sin(velocity + velocity)) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 126
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8060.560675438927 Adjusted=1.240454597143565E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 127
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8060.560675438927 Adjusted=1.240454597143565E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 128
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8060.560675438927 Adjusted=1.240454597143565E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(velocity) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + (sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * velocity))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 129
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8038.09628439259 Adjusted=1.243920914271718E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 130
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8038.09628439259 Adjusted=1.243920914271718E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 131
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8037.849180004516 Adjusted=1.2439591508786564E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity)))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + (sin(velocity) * velocity)))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 132
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8031.939900945183 Adjusted=1.2448742457071496E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + (sin(velocity + ((sin(velocity) * velocity) * velocity)) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 133
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8031.939900945183 Adjusted=1.2448742457071496E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + (sin(velocity + ((sin(velocity) * velocity) * velocity)) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 134
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8030.134535818149 Adjusted=1.2451540881803044E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + (velocity + (sin(velocity + velocity) * velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + velocity) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 135
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8015.723578642857 Adjusted=1.2473923919044356E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 136
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8015.723578642857 Adjusted=1.2473923919044356E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 137
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8015.723578642857 Adjusted=1.2473923919044356E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 138
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8000.58813151472 Adjusted=1.2497519037020188E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin(sin(velocity + velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 139
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8000.58813151472 Adjusted=1.2497519037020188E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin(sin(velocity + velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 140
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8000.58813151472 Adjusted=1.2497519037020188E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin(sin(velocity + velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 141
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=8000.58813151472 Adjusted=1.2497519037020188E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin(sin(velocity + velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 142
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7999.202232022018 Adjusted=1.2499684020453246E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 143
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7999.202232022018 Adjusted=1.2499684020453246E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 144
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7999.202232022018 Adjusted=1.2499684020453246E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 145
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7999.202232022018 Adjusted=1.2499684020453246E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 146
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7998.372670770091 Adjusted=1.2500980278791425E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(velocity + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 147
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7998.372670770091 Adjusted=1.2500980278791425E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(velocity + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 148
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7998.372670770091 Adjusted=1.2500980278791425E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(sin(angle))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(velocity + velocity)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 149
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7994.336785867159 Adjusted=1.2507290521740567E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 150
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7994.336785867159 Adjusted=1.2507290521740567E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 151
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7994.336785867159 Adjusted=1.2507290521740567E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 152
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7994.336785867159 Adjusted=1.2507290521740567E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 153
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7991.497451885109 Adjusted=1.2511733735543954E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(sin(velocity + velocity)) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 154
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7979.940039686484 Adjusted=1.2529852310972668E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (velocity + (sin(thickness) * velocity)))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 155
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7979.940039686484 Adjusted=1.2529852310972668E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (velocity + (sin(thickness) * velocity)))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 156
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7969.739304525792 Adjusted=1.2545887674838383E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 157
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7969.739304525792 Adjusted=1.2545887674838383E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 158
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7969.739304525792 Adjusted=1.2545887674838383E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 159
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7963.275876469801 Adjusted=1.2556069321436594E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 160
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7963.275876469801 Adjusted=1.2556069321436594E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 161
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7963.275876469801 Adjusted=1.2556069321436594E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 162
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7963.1291780792 Adjusted=1.255630060286367E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (velocity + (sin(thickness) * velocity)))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + velocity)) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + sin(velocity)))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 163
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7962.316373833463 Adjusted=1.25575822064019E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 164
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7957.694457787706 Adjusted=1.256487487117293E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(sin(sin((sin(velocity) * velocity) * velocity))))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 165
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7956.836589499255 Adjusted=1.2566229386006087E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 166
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7951.819727377326 Adjusted=1.2574156516556413E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(sin(velocity + velocity) * velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 167
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7955.08921580115 Adjusted=1.2568989271939725E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(sin(velocity + velocity)) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 168
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7955.08921580115 Adjusted=1.2568989271939725E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(sin(velocity + velocity)) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 169
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7955.08921580115 Adjusted=1.2568989271939725E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(sin(velocity + velocity)) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 170
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7952.9857352855315 Adjusted=1.2572313218564026E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((thickness - velocity) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity)))))

Generation: 171
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7945.775816624634 Adjusted=1.258371977611351E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * (velocity + (sin(thickness) * velocity)))) - sin(sin(sin((sin(velocity) * velocity) * velocity))))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 172
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7943.68915614358 Adjusted=1.2587024870906448E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((sin(velocity) + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(sin(velocity + velocity)) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 173
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7943.68915614358 Adjusted=1.2587024870906448E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((sin(velocity) + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(sin(velocity + velocity)) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 174
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7943.466456183671 Adjusted=1.2587377711459E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * (velocity + (sin(thickness) * velocity)))) - sin(sin(sin((sin(velocity) * velocity) * velocity))))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((velocity + velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 175
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7943.466456183671 Adjusted=1.2587377711459E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * (velocity + (sin(thickness) * velocity)))) - sin(sin(sin((sin(velocity) * velocity) * velocity))))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((velocity + velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 176
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7942.279524173256 Adjusted=1.2589258592206988E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * (velocity + (sin(thickness) * velocity)))) - sin(sin(sin((sin(velocity) * velocity) * velocity))))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + (velocity + (velocity + (sin(velocity) * velocity)))))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 177
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7941.553690102043 Adjusted=1.259040906763014E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * (velocity + (sin(thickness) * velocity)))) - sin(sin(sin(sin(velocity) * velocity))))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 178
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7941.101345071544 Adjusted=1.2591126158577014E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * (velocity + (sin(thickness) * velocity)))) - sin(sin(sin(sin(velocity) * velocity))))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin((velocity + (sin(velocity) * velocity)) - sin(velocity))))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 179
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7941.101345071544 Adjusted=1.2591126158577014E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * (velocity + (sin(thickness) * velocity)))) - sin(sin(sin(sin(velocity) * velocity))))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin((velocity + (sin(velocity) * velocity)) - sin(velocity))))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 180
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7941.101345071544 Adjusted=1.2591126158577014E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * (velocity + (sin(thickness) * velocity)))) - sin(sin(sin(sin(velocity) * velocity))))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin((velocity + (sin(velocity) * velocity)) - sin(velocity))))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 181
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7932.013760148268 Adjusted=1.2605549797777105E-4 Hits=1
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * (velocity + (sin(thickness) * velocity)))) - sin(sin(sin((sin(velocity) * velocity) * velocity))))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(velocity) * velocity) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (velocity + velocity)) + (velocity + (velocity + (sin(velocity) * velocity)))))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * (sin(velocity) * velocity)))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(velocity + velocity) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))

Generation: 182
Best Individual:
Subpopulation 0:
Evaluated: true
Fitness: Standardized=7909.588223255194 Adjusted=1.2641284968673312E-4 Hits=0
Tree 0:
(((velocity + (sin(velocity + velocity) * velocity)) + velocity) - sin(velocity + ((sin(velocity) + (sin(sin(velocity + (sin(thickness) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(sin(velocity + velocity)))) + velocity))) + velocity))) + (((((((((velocity + (sin(sin(velocity)) * ((velocity + velocity) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + (((velocity + (sin(sin(velocity)) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity))) + velocity) + ((sin(velocity + velocity) * velocity) + (sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity))))) + ((velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (sin(velocity + velocity) * velocity))) + velocity)) + ((sin(sin(velocity + (sin(velocity) * velocity))) * ((velocity + (velocity + (sin(velocity) * velocity))) + velocity)) - sin(angle)))) + (velocity + ((sin(velocity) * velocity) + (sin(sin(velocity + ((sin(velocity) * velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)))))) + angle) / (velocity + (sin(thickness) * (velocity + ((sin(sin(velocity + (sin(velocity + velocity) * velocity))) * ((velocity + ((velocity + velocity) - (thickness - velocity))) + velocity)) + (sin(sin((sin(velocity) * velocity) * velocity)) * ((velocity + (((velocity + velocity) - (thickness - velocity)) - (thickness - velocity))) + velocity))))))) + velocity) + (((((velocity + ((sin((sin(velocity + velocity) + velocity) + velocity) * velocity) * velocity)) + (((velocity + (sin(velocity + velocity) * velocity)) + velocity) + (sin(velocity + (sin(velocity) * velocity)) * ((velocity + ((velocity + (sin(velocity) * velocity)) - sin(velocity))) + velocity)))) + ((velocity + ((velocity + (sin(sin(velocity + (sin(thickness) * velocity))) * (((sin(velocity) * velocity) + (sin(velocity) * (((velocity + velocity) + velocity) + velocity))) + velocity))) + velocity)) + ((((velocity + (sin(velocity + velocity) * velocity)) + (velocity + (sin(thickness) * velocity))) + (sin(sin(velocity + velocity)) * velocity)) + sin(thickness)))) + angle) / ((velocity + (sin(velocity + velocity) * velocity)) + velocity)))
